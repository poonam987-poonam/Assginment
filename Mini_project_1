#create Schema for AgentLogingReport

hive> create table agent_Loging_report
    > (
    > SL_id int,
    > name string,
    > date string,
    > login_time string,
    > logout_time string,
    > duration string
    > )
    > row format delimited
    > fields terminated by ','
    >  tblproperties ("skip.header.line.count"="1");


#create Schema for AgentPerformance
create table agent_performance
    > (
    > sl_id int,
    > date string,
    > Agent_name string,
    > tatal_chats int,
    > Avg_responce string,
    > Avg_Resolution string,
    > Avg_rating string,
    > total_feedback int
    > )
    > row format delimited
    > fields terminated by ','
    > tblproperties ( "skip.header.line.count" = "1");

#load data into table agent_loging_report
hive> load data local inpath '/home/cloudera/data/AgentLogingReport.csv' into
    > table agent_loging_report ;


#load data into table agent_performance
hive> load data local inpath '/home/cloudera/data/AgentPerformance.csv' into
    > table agent_performance ;




3. List of all agents' names. 
select distinct(name) from agent_loging_report;

4. Find out agent average rating.
select avg(avg_rating) from agent_loging_report;


5. Total working days for each agents 
hive> select name , count(distinct date) as total_working_days from agent_loging_report group by name;


6. Total query that each agent have taken 
 select agent_name , sum(tatal_chats) as query from agent_performance group by agent_name;

7. Total Feedback that each agent have received 
hive> select agent_name , sum(toatl_feedback) as toatal_feedback from agent_performance group by agent_name;

8. Agent name who have average rating between 3.5 to 4 
hive> select agnet_name , avg_rating from agent_performance where avg_rating between 3.5 and 4;

9. Agent name who have rating less than 3.5 
10. Agent name who have rating more than 4.5 
11. How many feedback agents have received more than 4.5 average
12. average weekly response time for each agent 
13. average weekly resolution time for each agents 
14. Find the number of chat on which they have received a feedback 
15. Total contribution hour for each and every agents weekly basis 
16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.
17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.
